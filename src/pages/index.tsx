import type { InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import { getAllPosts } from "../lib/api";
import Image from 'next/image';

type Props = InferGetStaticPropsType<typeof getStaticProps>;

export const getStaticProps = async () => {
  const allPosts = getAllPosts(["slug", "title", "date", "tags"]);
  return {
    props: { allPosts },
  };
};

const Home: NextPage<Props> = ({ allPosts }) => {
  return (
    <div>
      <Head>
        <title>Hello world!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="
        w-full"
      >
        <h1 className="
          mt-0
          px-10
          py-5
          text-4xl
          font-medium
          text-primary
          text-gray-400
          bg-gray-100"
        >
          404 motivation not found
        </h1>

        <div className="
          mt-20
          ml-36
          mr-36
          grid
          grid-cols-4
          gap-1
          text-gray-500
          font-bold
          bg-gray-300"
        >
          {allPosts.map((post) => (
            <a href={post.slug} className="
              h-auto
              max-w-sm
              rounded-lg
              shadow-lg
              shadow-black/20
              transition-shadow
              duration-300
              ease-in-out
              hover:shadow-black/50
              block
              max-w-sm
              p-6
              bg-white
              border
              rounded-lg
              shadow
              hover:bg-gray-100
              dark:bg-gray-800
              dark:border-gray-700
              dark:hover:bg-gray-700"
              key={post.slug}
            >
              <h2>{post.title}</h2>
              <p>{post.date}</p>
            </a>
          ))}
        </div>
      </main>
      <footer className="
        px-5
        py-3"
      >
        footer
      </footer>
    </div>
  );
};

export default Home;
